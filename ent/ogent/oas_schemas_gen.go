// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/jx"
)

// Ref: #/components/schemas/CardCreate
type CardCreate struct {
	ID        int         `json:"id"`
	Card      OptInt      `json:"card"`
	Status    OptString   `json:"status"`
	Cp        OptInt      `json:"cp"`
	URL       OptString   `json:"url"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *CardCreate) GetID() int {
	return s.ID
}

// GetCard returns the value of Card.
func (s *CardCreate) GetCard() OptInt {
	return s.Card
}

// GetStatus returns the value of Status.
func (s *CardCreate) GetStatus() OptString {
	return s.Status
}

// GetCp returns the value of Cp.
func (s *CardCreate) GetCp() OptInt {
	return s.Cp
}

// GetURL returns the value of URL.
func (s *CardCreate) GetURL() OptString {
	return s.URL
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CardCreate) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *CardCreate) SetID(val int) {
	s.ID = val
}

// SetCard sets the value of Card.
func (s *CardCreate) SetCard(val OptInt) {
	s.Card = val
}

// SetStatus sets the value of Status.
func (s *CardCreate) SetStatus(val OptString) {
	s.Status = val
}

// SetCp sets the value of Cp.
func (s *CardCreate) SetCp(val OptInt) {
	s.Cp = val
}

// SetURL sets the value of URL.
func (s *CardCreate) SetURL(val OptString) {
	s.URL = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CardCreate) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

func (*CardCreate) createCardRes() {}

// Ref: #/components/schemas/CardList
type CardList struct {
	ID        int         `json:"id"`
	Card      OptInt      `json:"card"`
	Status    OptString   `json:"status"`
	Cp        OptInt      `json:"cp"`
	URL       OptString   `json:"url"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *CardList) GetID() int {
	return s.ID
}

// GetCard returns the value of Card.
func (s *CardList) GetCard() OptInt {
	return s.Card
}

// GetStatus returns the value of Status.
func (s *CardList) GetStatus() OptString {
	return s.Status
}

// GetCp returns the value of Cp.
func (s *CardList) GetCp() OptInt {
	return s.Cp
}

// GetURL returns the value of URL.
func (s *CardList) GetURL() OptString {
	return s.URL
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CardList) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *CardList) SetID(val int) {
	s.ID = val
}

// SetCard sets the value of Card.
func (s *CardList) SetCard(val OptInt) {
	s.Card = val
}

// SetStatus sets the value of Status.
func (s *CardList) SetStatus(val OptString) {
	s.Status = val
}

// SetCp sets the value of Cp.
func (s *CardList) SetCp(val OptInt) {
	s.Cp = val
}

// SetURL sets the value of URL.
func (s *CardList) SetURL(val OptString) {
	s.URL = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CardList) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/Card_OwnerRead
type CardOwnerRead struct {
	ID        int         `json:"id"`
	Username  string      `json:"username"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
	Next      OptString   `json:"next"`
}

// GetID returns the value of ID.
func (s *CardOwnerRead) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *CardOwnerRead) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CardOwnerRead) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CardOwnerRead) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetNext returns the value of Next.
func (s *CardOwnerRead) GetNext() OptString {
	return s.Next
}

// SetID sets the value of ID.
func (s *CardOwnerRead) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *CardOwnerRead) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CardOwnerRead) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CardOwnerRead) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetNext sets the value of Next.
func (s *CardOwnerRead) SetNext(val OptString) {
	s.Next = val
}

func (*CardOwnerRead) readCardOwnerRes() {}

// Ref: #/components/schemas/CardRead
type CardRead struct {
	ID        int         `json:"id"`
	Card      OptInt      `json:"card"`
	Status    OptString   `json:"status"`
	Cp        OptInt      `json:"cp"`
	URL       OptString   `json:"url"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *CardRead) GetID() int {
	return s.ID
}

// GetCard returns the value of Card.
func (s *CardRead) GetCard() OptInt {
	return s.Card
}

// GetStatus returns the value of Status.
func (s *CardRead) GetStatus() OptString {
	return s.Status
}

// GetCp returns the value of Cp.
func (s *CardRead) GetCp() OptInt {
	return s.Cp
}

// GetURL returns the value of URL.
func (s *CardRead) GetURL() OptString {
	return s.URL
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CardRead) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *CardRead) SetID(val int) {
	s.ID = val
}

// SetCard sets the value of Card.
func (s *CardRead) SetCard(val OptInt) {
	s.Card = val
}

// SetStatus sets the value of Status.
func (s *CardRead) SetStatus(val OptString) {
	s.Status = val
}

// SetCp sets the value of Cp.
func (s *CardRead) SetCp(val OptInt) {
	s.Cp = val
}

// SetURL sets the value of URL.
func (s *CardRead) SetURL(val OptString) {
	s.URL = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CardRead) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

func (*CardRead) readCardRes() {}

// Ref: #/components/schemas/CardUpdate
type CardUpdate struct {
	ID        int         `json:"id"`
	Card      OptInt      `json:"card"`
	Status    OptString   `json:"status"`
	Cp        OptInt      `json:"cp"`
	URL       OptString   `json:"url"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *CardUpdate) GetID() int {
	return s.ID
}

// GetCard returns the value of Card.
func (s *CardUpdate) GetCard() OptInt {
	return s.Card
}

// GetStatus returns the value of Status.
func (s *CardUpdate) GetStatus() OptString {
	return s.Status
}

// GetCp returns the value of Cp.
func (s *CardUpdate) GetCp() OptInt {
	return s.Cp
}

// GetURL returns the value of URL.
func (s *CardUpdate) GetURL() OptString {
	return s.URL
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CardUpdate) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *CardUpdate) SetID(val int) {
	s.ID = val
}

// SetCard sets the value of Card.
func (s *CardUpdate) SetCard(val OptInt) {
	s.Card = val
}

// SetStatus sets the value of Status.
func (s *CardUpdate) SetStatus(val OptString) {
	s.Status = val
}

// SetCp sets the value of Cp.
func (s *CardUpdate) SetCp(val OptInt) {
	s.Cp = val
}

// SetURL sets the value of URL.
func (s *CardUpdate) SetURL(val OptString) {
	s.URL = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CardUpdate) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

func (*CardUpdate) updateCardRes() {}

type CreateCardReq struct {
	Password  string      `json:"password"`
	Card      OptInt      `json:"card"`
	Status    OptString   `json:"status"`
	Cp        OptInt      `json:"cp"`
	URL       OptString   `json:"url"`
	CreatedAt OptDateTime `json:"created_at"`
	Owner     int         `json:"owner"`
}

// GetPassword returns the value of Password.
func (s *CreateCardReq) GetPassword() string {
	return s.Password
}

// GetCard returns the value of Card.
func (s *CreateCardReq) GetCard() OptInt {
	return s.Card
}

// GetStatus returns the value of Status.
func (s *CreateCardReq) GetStatus() OptString {
	return s.Status
}

// GetCp returns the value of Cp.
func (s *CreateCardReq) GetCp() OptInt {
	return s.Cp
}

// GetURL returns the value of URL.
func (s *CreateCardReq) GetURL() OptString {
	return s.URL
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateCardReq) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetOwner returns the value of Owner.
func (s *CreateCardReq) GetOwner() int {
	return s.Owner
}

// SetPassword sets the value of Password.
func (s *CreateCardReq) SetPassword(val string) {
	s.Password = val
}

// SetCard sets the value of Card.
func (s *CreateCardReq) SetCard(val OptInt) {
	s.Card = val
}

// SetStatus sets the value of Status.
func (s *CreateCardReq) SetStatus(val OptString) {
	s.Status = val
}

// SetCp sets the value of Cp.
func (s *CreateCardReq) SetCp(val OptInt) {
	s.Cp = val
}

// SetURL sets the value of URL.
func (s *CreateCardReq) SetURL(val OptString) {
	s.URL = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateCardReq) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetOwner sets the value of Owner.
func (s *CreateCardReq) SetOwner(val int) {
	s.Owner = val
}

type CreateGroupReq struct {
	Name     string `json:"name"`
	Password string `json:"password"`
	Users    []int  `json:"users"`
}

// GetName returns the value of Name.
func (s *CreateGroupReq) GetName() string {
	return s.Name
}

// GetPassword returns the value of Password.
func (s *CreateGroupReq) GetPassword() string {
	return s.Password
}

// GetUsers returns the value of Users.
func (s *CreateGroupReq) GetUsers() []int {
	return s.Users
}

// SetName sets the value of Name.
func (s *CreateGroupReq) SetName(val string) {
	s.Name = val
}

// SetPassword sets the value of Password.
func (s *CreateGroupReq) SetPassword(val string) {
	s.Password = val
}

// SetUsers sets the value of Users.
func (s *CreateGroupReq) SetUsers(val []int) {
	s.Users = val
}

type CreateUserReq struct {
	Username  string      `json:"username"`
	Password  string      `json:"password"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
	Next      OptString   `json:"next"`
	Card      []int       `json:"card"`
}

// GetUsername returns the value of Username.
func (s *CreateUserReq) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *CreateUserReq) GetPassword() string {
	return s.Password
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateUserReq) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateUserReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetNext returns the value of Next.
func (s *CreateUserReq) GetNext() OptString {
	return s.Next
}

// GetCard returns the value of Card.
func (s *CreateUserReq) GetCard() []int {
	return s.Card
}

// SetUsername sets the value of Username.
func (s *CreateUserReq) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *CreateUserReq) SetPassword(val string) {
	s.Password = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateUserReq) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateUserReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetNext sets the value of Next.
func (s *CreateUserReq) SetNext(val OptString) {
	s.Next = val
}

// SetCard sets the value of Card.
func (s *CreateUserReq) SetCard(val []int) {
	s.Card = val
}

// DeleteCardNoContent is response for DeleteCard operation.
type DeleteCardNoContent struct{}

func (*DeleteCardNoContent) deleteCardRes() {}

// DeleteGroupNoContent is response for DeleteGroup operation.
type DeleteGroupNoContent struct{}

func (*DeleteGroupNoContent) deleteGroupRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

// DrawDoneNoContent is response for DrawDone operation.
type DrawDoneNoContent struct{}

// DrawStartNoContent is response for DrawStart operation.
type DrawStartNoContent struct{}

// Ref: #/components/schemas/GroupCreate
type GroupCreate struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *GroupCreate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *GroupCreate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *GroupCreate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GroupCreate) SetName(val string) {
	s.Name = val
}

func (*GroupCreate) createGroupRes() {}

// Ref: #/components/schemas/GroupList
type GroupList struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *GroupList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *GroupList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *GroupList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GroupList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/GroupRead
type GroupRead struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *GroupRead) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *GroupRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *GroupRead) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GroupRead) SetName(val string) {
	s.Name = val
}

func (*GroupRead) readGroupRes() {}

// Ref: #/components/schemas/GroupUpdate
type GroupUpdate struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *GroupUpdate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *GroupUpdate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *GroupUpdate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GroupUpdate) SetName(val string) {
	s.Name = val
}

func (*GroupUpdate) updateGroupRes() {}

// Ref: #/components/schemas/Group_UsersList
type GroupUsersList struct {
	ID        int         `json:"id"`
	Username  string      `json:"username"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
	Next      OptString   `json:"next"`
}

// GetID returns the value of ID.
func (s *GroupUsersList) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *GroupUsersList) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupUsersList) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupUsersList) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetNext returns the value of Next.
func (s *GroupUsersList) GetNext() OptString {
	return s.Next
}

// SetID sets the value of ID.
func (s *GroupUsersList) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *GroupUsersList) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupUsersList) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupUsersList) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetNext sets the value of Next.
func (s *GroupUsersList) SetNext(val OptString) {
	s.Next = val
}

type ListCardOKApplicationJSON []CardList

func (*ListCardOKApplicationJSON) listCardRes() {}

type ListGroupOKApplicationJSON []GroupList

func (*ListGroupOKApplicationJSON) listGroupRes() {}

type ListGroupUsersOKApplicationJSON []GroupUsersList

func (*ListGroupUsersOKApplicationJSON) listGroupUsersRes() {}

type ListUserCardOKApplicationJSON []UserCardList

func (*ListUserCardOKApplicationJSON) listUserCardRes() {}

type ListUserOKApplicationJSON []UserList

func (*ListUserOKApplicationJSON) listUserRes() {}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createCardRes()     {}
func (*R400) createGroupRes()    {}
func (*R400) createUserRes()     {}
func (*R400) deleteCardRes()     {}
func (*R400) deleteGroupRes()    {}
func (*R400) deleteUserRes()     {}
func (*R400) listCardRes()       {}
func (*R400) listGroupRes()      {}
func (*R400) listGroupUsersRes() {}
func (*R400) listUserCardRes()   {}
func (*R400) listUserRes()       {}
func (*R400) readCardOwnerRes()  {}
func (*R400) readCardRes()       {}
func (*R400) readGroupRes()      {}
func (*R400) readUserRes()       {}
func (*R400) updateCardRes()     {}
func (*R400) updateGroupRes()    {}
func (*R400) updateUserRes()     {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteCardRes()     {}
func (*R404) deleteGroupRes()    {}
func (*R404) deleteUserRes()     {}
func (*R404) listCardRes()       {}
func (*R404) listGroupRes()      {}
func (*R404) listGroupUsersRes() {}
func (*R404) listUserCardRes()   {}
func (*R404) listUserRes()       {}
func (*R404) readCardOwnerRes()  {}
func (*R404) readCardRes()       {}
func (*R404) readGroupRes()      {}
func (*R404) readUserRes()       {}
func (*R404) updateCardRes()     {}
func (*R404) updateGroupRes()    {}
func (*R404) updateUserRes()     {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createCardRes()     {}
func (*R409) createGroupRes()    {}
func (*R409) createUserRes()     {}
func (*R409) deleteCardRes()     {}
func (*R409) deleteGroupRes()    {}
func (*R409) deleteUserRes()     {}
func (*R409) listCardRes()       {}
func (*R409) listGroupRes()      {}
func (*R409) listGroupUsersRes() {}
func (*R409) listUserCardRes()   {}
func (*R409) listUserRes()       {}
func (*R409) readCardOwnerRes()  {}
func (*R409) readCardRes()       {}
func (*R409) readGroupRes()      {}
func (*R409) readUserRes()       {}
func (*R409) updateCardRes()     {}
func (*R409) updateGroupRes()    {}
func (*R409) updateUserRes()     {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createCardRes()     {}
func (*R500) createGroupRes()    {}
func (*R500) createUserRes()     {}
func (*R500) deleteCardRes()     {}
func (*R500) deleteGroupRes()    {}
func (*R500) deleteUserRes()     {}
func (*R500) listCardRes()       {}
func (*R500) listGroupRes()      {}
func (*R500) listGroupUsersRes() {}
func (*R500) listUserCardRes()   {}
func (*R500) listUserRes()       {}
func (*R500) readCardOwnerRes()  {}
func (*R500) readCardRes()       {}
func (*R500) readGroupRes()      {}
func (*R500) readUserRes()       {}
func (*R500) updateCardRes()     {}
func (*R500) updateGroupRes()    {}
func (*R500) updateUserRes()     {}

type UpdateCardReq struct {
	Owner OptInt `json:"owner"`
}

// GetOwner returns the value of Owner.
func (s *UpdateCardReq) GetOwner() OptInt {
	return s.Owner
}

// SetOwner sets the value of Owner.
func (s *UpdateCardReq) SetOwner(val OptInt) {
	s.Owner = val
}

type UpdateGroupReq struct {
	Name  OptString `json:"name"`
	Users []int     `json:"users"`
}

// GetName returns the value of Name.
func (s *UpdateGroupReq) GetName() OptString {
	return s.Name
}

// GetUsers returns the value of Users.
func (s *UpdateGroupReq) GetUsers() []int {
	return s.Users
}

// SetName sets the value of Name.
func (s *UpdateGroupReq) SetName(val OptString) {
	s.Name = val
}

// SetUsers sets the value of Users.
func (s *UpdateGroupReq) SetUsers(val []int) {
	s.Users = val
}

type UpdateUserReq struct {
	UpdatedAt OptDateTime `json:"updated_at"`
	Next      OptString   `json:"next"`
	Card      []int       `json:"card"`
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateUserReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetNext returns the value of Next.
func (s *UpdateUserReq) GetNext() OptString {
	return s.Next
}

// GetCard returns the value of Card.
func (s *UpdateUserReq) GetCard() []int {
	return s.Card
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateUserReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetNext sets the value of Next.
func (s *UpdateUserReq) SetNext(val OptString) {
	s.Next = val
}

// SetCard sets the value of Card.
func (s *UpdateUserReq) SetCard(val []int) {
	s.Card = val
}

// Ref: #/components/schemas/User_CardList
type UserCardList struct {
	ID        int         `json:"id"`
	Card      OptInt      `json:"card"`
	Status    OptString   `json:"status"`
	Cp        OptInt      `json:"cp"`
	URL       OptString   `json:"url"`
	CreatedAt OptDateTime `json:"created_at"`
}

// GetID returns the value of ID.
func (s *UserCardList) GetID() int {
	return s.ID
}

// GetCard returns the value of Card.
func (s *UserCardList) GetCard() OptInt {
	return s.Card
}

// GetStatus returns the value of Status.
func (s *UserCardList) GetStatus() OptString {
	return s.Status
}

// GetCp returns the value of Cp.
func (s *UserCardList) GetCp() OptInt {
	return s.Cp
}

// GetURL returns the value of URL.
func (s *UserCardList) GetURL() OptString {
	return s.URL
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserCardList) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserCardList) SetID(val int) {
	s.ID = val
}

// SetCard sets the value of Card.
func (s *UserCardList) SetCard(val OptInt) {
	s.Card = val
}

// SetStatus sets the value of Status.
func (s *UserCardList) SetStatus(val OptString) {
	s.Status = val
}

// SetCp sets the value of Cp.
func (s *UserCardList) SetCp(val OptInt) {
	s.Cp = val
}

// SetURL sets the value of URL.
func (s *UserCardList) SetURL(val OptString) {
	s.URL = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserCardList) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/UserCreate
type UserCreate struct {
	ID        int         `json:"id"`
	Username  string      `json:"username"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
	Next      OptString   `json:"next"`
}

// GetID returns the value of ID.
func (s *UserCreate) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserCreate) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserCreate) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserCreate) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetNext returns the value of Next.
func (s *UserCreate) GetNext() OptString {
	return s.Next
}

// SetID sets the value of ID.
func (s *UserCreate) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserCreate) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserCreate) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserCreate) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetNext sets the value of Next.
func (s *UserCreate) SetNext(val OptString) {
	s.Next = val
}

func (*UserCreate) createUserRes() {}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID        int         `json:"id"`
	Username  string      `json:"username"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
	Next      OptString   `json:"next"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserList) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserList) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserList) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetNext returns the value of Next.
func (s *UserList) GetNext() OptString {
	return s.Next
}

// SetID sets the value of ID.
func (s *UserList) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserList) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserList) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserList) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetNext sets the value of Next.
func (s *UserList) SetNext(val OptString) {
	s.Next = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID        int         `json:"id"`
	Username  string      `json:"username"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
	Next      OptString   `json:"next"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserRead) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserRead) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserRead) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetNext returns the value of Next.
func (s *UserRead) GetNext() OptString {
	return s.Next
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserRead) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserRead) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserRead) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetNext sets the value of Next.
func (s *UserRead) SetNext(val OptString) {
	s.Next = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID        int         `json:"id"`
	Username  string      `json:"username"`
	CreatedAt OptDateTime `json:"created_at"`
	UpdatedAt OptDateTime `json:"updated_at"`
	Next      OptString   `json:"next"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() int {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserUpdate) GetUsername() string {
	return s.Username
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserUpdate) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserUpdate) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetNext returns the value of Next.
func (s *UserUpdate) GetNext() OptString {
	return s.Next
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val int) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserUpdate) SetUsername(val string) {
	s.Username = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserUpdate) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserUpdate) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetNext sets the value of Next.
func (s *UserUpdate) SetNext(val OptString) {
	s.Next = val
}

func (*UserUpdate) updateUserRes() {}
